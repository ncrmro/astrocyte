- name: Create grafana volumes
  docker_volume:
    name: "{{ item }}"
  with_items:
    - grafana_config
    - grafana_data

- name: Creates directory
  file:
    path: /var/lib/docker/volumes/grafana_data/_data/dashboards/
    state: directory
    owner: root
    group: crontab

- name: Start grafana container
  docker_container:
    name: grafana
    image: "{{ docker_grafana_image | default('grafana/grafana:latest') }}"
    state: started
    restart_policy: always
    networks:
      - name: traefik
      - name: prometheus
      - name: postgres
    volumes:
      - grafana_config:/etc/grafana/
      - grafana_data:/var/lib/grafana
    labels:
     traefik.enable: "true"
     traefik.frontend.rule: Host:grafana.jtronics.co
     traefik.port: "3000"
     traefik.docker.network: traefik
    env:
      #GF_SERVER_ROOT_URL: grafana.staging.jtronics.co
      #GF_SERVER_DOMAIN: grafana.staging.jtronics.co
      GF_SECURITY_ADMIN_USER: "{{ grafana_admin_username }}"
      GF_SECURITY_ADMIN_PASSWORD: "{{ grafana_admin_password }}"
      GF_DATABASE_URL: "postgres://{{grafana_postgres_user_username}}:{{grafana_postgres_user_password}}@postgres:5432/{{grafana_postgres_db_name}}"
      GF_INSTALL_PLUGINS: "grafana-piechart-panel,cloudflare-app,grafana-kubernetes-app,raintank-worldping-app,grafana-worldmap-panel,grafana-clock-panel"

- name: Copy grafana datasources configuration file.
  template:
    src: "{{item.src}}"
    dest: "{{item.dest}}"
    owner: root
    group: crontab
    mode: 0777
  notify: Restart Grafana
  with_items:
    - src: datasources.yml.j2
      dest: /var/lib/docker/volumes/grafana_config/_data/provisioning/datasources/datasources.yml
#    - src: grafana-dashboards.yml.j2
#      dest: /var/lib/docker/volumes/grafana_config/_data/provisioning/dashboards/dashboards.yml
#    - src: traefik_rev1.json.j2
#      dest: /var/lib/docker/volumes/grafana_data/_data/dashboards/traefik_rev1.json


# docker rm -f grafana
# sudo docker rm -f grafana && sudo docker volume rm grafana_config grafana_data