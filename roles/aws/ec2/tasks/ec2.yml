# TODO pass in single group id when needed
# https://github.com/atplanet/ansible-auto-scaling-tutorial/issues/6
#- name: ec2 module fails when providing named group if less than one is provided.
#  set_fact:
#     security_group:
#      - "{{ hostvars[inventory_hostname]['aws_sg_' + item.security_groups[0]].group_id }}"
#  cacheable: true
#  when: item.security_groups|length <= 1

- name: Get the os drive
  set_fact:
    os_drive: "{{item['volumes'][0]}}"

- name: Get the os drive name
  set_fact:
    os_drive_name: "{{os_drive.volume.tags.Name}}"

- name: Set the os drive id
  set_fact:
    os_drive_vol_id: "{{hostvars[inventory_hostname]['aws_ebs_' + os_drive_name].volume.id }}"

- name: Set node volumes
  set_fact:
    ec2_node_volumes:
      - id: "{{ os_drive_vol_id }}"
        device_name: "{{ os_drive.volume.attachment_set.device }}"
        volume_size: "{{ os_drive.volume.size }}"

- name: Create ec2 instances
  ec2:
    ec2_access_key: "{{ ec2_access_key }}"
    ec2_secret_key: "{{ ec2_secret_key }}"
    region: "{{ ec2_region | default(aws_default_region) }}"
    zone: "{{ ec2_zone | default(aws_default_zone)  }}"
    keypair: "{{ ec2_keypair | default(aws_default_keypair) }}"
#    group: "{{ item.security_groups }}"
    assign_public_ip: "{{ item.assign_public_ip | default(false) }}"
    instance_type: "{{ item.instance_type }}"
    image: "{{ item.ec2_image | default(aws_default_ec2_image_id) }}"
    exact_count: "{{ item.exact_count | default(1) }}"
    count_tag: "{{ item.tags }}"
    instance_tags: "{{ item.tags }}"
    vpc_subnet_id: "{{ item.vpc_subnet_id | default(aws_default_vpc_subnet_id) }}"
    wait: yes
    volumes: "{{ ec2_node_volumes }}"
  register: ec2


- name: Get the ec2 instance
  set_fact:
    ec2: "{{ ec2.tagged_instances[0] }}"

- name: DEBUG ME
  debug:
    msg: "{{ item }}"

- debug:
    msg: "{{ ec2.id }}"
#
#- name: associate new elastic IPs with each of the instances
#  ec2_eip:
#    device_id: "{{ item }}"
#  with_items: "{{ ec2.instance_ids }}